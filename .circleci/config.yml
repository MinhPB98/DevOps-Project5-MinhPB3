version: "2.1"
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

commands:
  aws_cli_install:
    steps:
      - run:
          name: Install aws-cli
          command: |
            sudo apt install curl
            sudo apt install unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
  aws_configure_credentials:
    steps:
      - run:
          name: aws configure credential
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_DEFAULT_REGION
jobs:
  check-dockerfile:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-and-push-image-docker:
    docker:
      - image: "cimg/python:3.10"
        user: root
    steps:
      - checkout
      - aws_cli_install
      - aws_configure_credentials
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: false
      - run:
          name: build docker and push to ECR
          command: |
            docker build . -t project-5-minhpb3:v1
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${DOMAIN_REPO}"
            docker tag project-5-minhpb3:v1 "${REPOSITORY_ECR}":v1
            docker push "${REPOSITORY_ECR}":v1
  create-aws-cluster:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws_cli_install
      - aws_configure_credentials
      - aws-eks/create-cluster:
          cluster-name: project-5-udacity
          aws-region: us-east-2
          node-type: t3.medium
          nodes-min: 1
          nodes-max: 3
  create-deployment:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws_cli_install
      - aws_configure_credentials
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: project-5-udacity
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: infrastructure/infrastructure.yaml
          show-kubectl-command: true
      - run:
          command: |
            kubectl get all 
            kubectl describe pods
workflows:
  deployment:
    jobs:
      - check-dockerfile
      - build-and-push-image-docker:
          requires:
            - "check-dockerfile"
      - create-aws-cluster:
          requires:
            - "check-dockerfile"
      - create-deployment:
          requires: [build-and-push-image-docker, create-aws-cluster]
